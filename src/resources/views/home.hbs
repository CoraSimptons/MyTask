<div class="{{hasTask tasks}}">
    <h3>Công việc chính</h3>
    <div class="row">
        {{#each tasks}}
        {{#unless this.completed}}
            {{#if (compareDates this.date)}}
            <div class="col-lg-3 col-sm-6">
                <div class="card border-success mb-3" style="max-width: 18rem;min-height: 16rem;">
                    <div class="card-header bg-primary text-white border-success">{{formatDate this.date}}</div>
                    <div class="card-body">
                        <a href="/tasks/{{this.slug}}">
                            <h5 class="card-title">{{this.name}}</h5>
                        </a>
                        <p class="card-text font-weight-light font-italic">{{this.description}}</p>
                    </div>
                    <div class="card-footer border-success font-weight-bold {{isTaskCompleted this.missionQuantity this.completedMissionQuantity}}">
                        <input type="checkbox" class="input-checkbox-primary" data-id="{{this._id}}">
                        Hoàn thành công việc {{this.completedMissionQuantity}}/{{this.missionQuantity}}</label>
                    </div>
                </div>
            </div>
            {{/if}}
        {{/unless}}
        {{/each}}
    </div>

    <h3>Công việc quá hạn</h3>
    <div class="row">
        {{#each tasks}}
        {{#unless this.completed}}
            {{#unless (compareDates this.date)}}
            <div class="col-lg-3 col-sm-6">
                <div class="card border-success mb-3" style="max-width: 18rem;min-height: 16rem;">
                    <div class="card-header bg-danger text-white border-success">{{formatDate this.date}}</div>
                    <div class="card-body">
                        <a href="/tasks/{{this.slug}}">
                            <h5 class="card-title">{{this.name}}</h5>
                        </a>
                        <p class="card-text font-weight-light font-italic">{{this.description}}</p>
                    </div>
                    <div class="card-footer border-success font-weight-bold {{isTaskCompleted this.missionQuantity this.completedMissionQuantity}}">
                        <input type="checkbox" class="input-checkbox-danger" data-id="{{this._id}}">
                        Hoàn thành công việc {{this.completedMissionQuantity}}/{{this.missionQuantity}}</label>
                    </div>
                </div>
            </div>
            {{/unless}}
        {{/unless}}
        {{/each}}
    </div>

    <h3>Công việc hoàn thành</h3>
    <div class="row">
        {{#each tasks}}
        {{#if this.completed}}
        <div class="col-lg-3 col-sm-6">
            <div class="card border-success mb-3" style="max-width: 18rem;min-height: 16rem;">
                <div class="card-header bg-success text-white border-success">{{formatDate this.date}}</div>
                <div class="card-body">
                    <a href="/tasks/{{this.slug}}">
                        <h5 class="card-title">{{this.name}}</h5>
                    </a>
                    <p class="card-text font-weight-light font-italic">{{this.description}}</p>
                </div>
                <div class="card-footer bg-transparent border-success font-weight-bold text-center">
                    Hoàn thành công việc
                </div>
            </div>
        </div>
        {{/if}}
        {{/each}}
    </div>
</div>

{{!-- Confirm completed task --}}
<div id="modal-confirm-complete" class="modal js-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Hoàn thành công việc</h5>
                <button type="button" id="btn-close-task" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Bạn còn những nhiệm vụ chưa hoàn thành. Bạn có chắc chắn muốn hoàn thành công việc này?</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="btn-complete-task" class="btn btn-danger">Hoàn thành</button>
                <button type="button" id="btn-cancel-task" class="btn btn-secondary" data-dismiss="modal">Huỷ</button>
            </div>
        </div>
    </div>
</div>

{{!-- Update status of a task form hidden --}}
<form name="form-update-status-task" method="POST">
    <input type="hidden" name="completed" value="true">
</form>

<div id="toast" class="{{notify info}}"></div>

<script>
    var arrInputCheckboxPrimary
    var arrInputCheckboxDanger
    var taskId
    var updateStatusTask
    var main
    var hasModal
    var btnCompleteTask
    var btnCancelTask
    var btnCloseTask
    var itemIndex
    var modal

    function showSuccessToast() {
        toast({
            title: "Chúc mừng!",
            message: "Bạn đã hoàn thành công việc.",
            type: "success",
            duration: 3000
        });
    }

    function showErrorToast() {
        toast({
            title: "Thất bại!",
            message: "Có lỗi xảy ra, vui lòng liên hệ quản trị viên.",
            type: "error",
            duration: 5000
        });
    }

    // Toast function
    function toast({ title = "", message = "", type = "info", duration = 3000 }) {
        if (main) {
            const toast = document.createElement("div");
        
            // Auto remove toast
            const autoRemoveId = setTimeout(function () {
                main.removeChild(toast);
            }, duration + 1000);
        
            // Remove toast when clicked
            toast.onclick = function (e) {
                if (e.target.closest(".toast__close")) {
                main.removeChild(toast);
                clearTimeout(autoRemoveId);
                }
            };
        
            const icons = {
                success: "fas fa-check-circle",
                info: "fas fa-info-circle",
                warning: "fas fa-exclamation-circle",
                error: "fas fa-exclamation-circle"
            };
            const icon = icons[type];
            const delay = (duration / 1000).toFixed(2);
        
            toast.classList.add("toast", `toast--${type}`);
            toast.style.animation = `slideInLeft ease .3s, fadeOut linear 1s ${delay}s forwards`;
        
            toast.innerHTML = `
                            <div class="toast__icon">
                                <i class="${icon}"></i>
                            </div>
                            <div class="toast__body">
                                <h3 class="toast__title">${title}</h3>
                                <p class="toast__msg">${message}</p>
                            </div>
                            <div class="toast__close">
                                <i class="fas fa-times"></i>
                            </div>`;
            main.appendChild(toast);
        }
    }

    function mySubmit() {
        updateStatusTask.submit()
    }

    // callback run when DOM loaded completed
    document.addEventListener('DOMContentLoaded', function () {
        arrInputCheckboxPrimary = document.querySelectorAll('.input-checkbox-primary')
        arrInputCheckboxDanger = document.querySelectorAll('.input-checkbox-danger')
        updateStatusTask = document.forms['form-update-status-task']
        main = document.getElementById("toast");
        btnCompleteTask = document.getElementById('btn-complete-task')
        btnCancelTask = document.getElementById('btn-cancel-task')
        btnCloseTask = document.getElementById('btn-close-task')
        modal = document.querySelector('.js-modal')

        // display successfull message
        if (main.classList.contains('toastmessage')) {
            showSuccessToast()
        }

        for (const itemInputCheckboxPrimary of arrInputCheckboxPrimary) {
            // Check has modal when all missions are not completed
            if (itemInputCheckboxPrimary.parentElement.parentElement.classList.contains('bg-transparent')) {
                itemInputCheckboxPrimary.setAttribute('data-toggle','modal')
                itemInputCheckboxPrimary.setAttribute('data-target','#modal-confirm-complete')
            }

            if (itemInputCheckboxPrimary.parentElement.parentElement.classList.contains('not-checked')) {
                itemInputCheckboxPrimary.setAttribute('disabled', true)
            }

            itemInputCheckboxPrimary.onclick = function () {
                taskId = itemInputCheckboxPrimary.getAttribute('data-id')
                hasModal = itemInputCheckboxPrimary.getAttribute('data-toggle')
                updateStatusTask.action = `/tasks/${taskId}?_method=PUT`
                if (itemInputCheckboxPrimary.checked && hasModal === null) {
                    updateStatusTask.submit()
                } else {
                    btnCompleteTask.onclick = function() {
                        updateStatusTask.submit()
                    }
                    btnCancelTask.onclick = function() {
                        itemInputCheckboxPrimary.checked = false
                    }
                    btnCloseTask.onclick = function() {
                        itemInputCheckboxPrimary.checked = false
                    }
                    modal.addEventListener('click', function() {
                        itemInputCheckboxPrimary.checked = false
                    })
                }
            } 
        }

        for (const itemInputCheckboxDanger of arrInputCheckboxDanger) {
            // Check has modal when all missions are not completed
            if (itemInputCheckboxDanger.parentElement.parentElement.classList.contains('bg-transparent')) {
                itemInputCheckboxDanger.setAttribute('data-toggle','modal')
                itemInputCheckboxDanger.setAttribute('data-target','#modal-confirm-complete')
            }

            if (itemInputCheckboxDanger.parentElement.parentElement.classList.contains('not-checked')) {
                itemInputCheckboxDanger.setAttribute('disabled', true)
            }

            itemInputCheckboxDanger.onclick = function () {
                taskId = itemInputCheckboxDanger.getAttribute('data-id')
                hasModal = itemInputCheckboxDanger.getAttribute('data-toggle')
                updateStatusTask.action = `/tasks/${taskId}?_method=PUT`
                if (itemInputCheckboxDanger.checked && hasModal === null) {
                    updateStatusTask.submit()
                } else {
                    btnCompleteTask.onclick = function() {
                        updateStatusTask.submit()
                    }
                    btnCancelTask.onclick = function() {
                        itemInputCheckboxDanger.checked = false
                    }
                    btnCloseTask.onclick = function() {
                        itemInputCheckboxDanger.checked = false
                    }
                    modal.addEventListener('click', function() {
                        itemInputCheckboxDanger.checked = false
                    })
                }
            } 
        }
    })
</script>